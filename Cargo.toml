[package]
name = "owiwi"
version = "0.1.0"
edition = "2024"
authors = ["Sede Soukossi"]
description = "A library to initial tracing with opentelemetry"
license = "MIT OR Apache-2.0"
categories = ["development-tools::debugging", "development-tools::profiling"]
keywords = ["opentelemetry", "tracing", "metrics"]
repository = "https://github.com/styvane/owiwi"

[features]
default = ["clap", "serde"]
clap = ["dep:clap", "dep:clap-verbosity-flag"]
serde = ["dep:serde"]

[dependencies]
# A command line argument parser
clap = { version = "4.5", optional = true, features = ["derive", "env"] }
# Easily add a `--verbose` flag to CLI
clap-verbosity-flag = { version = "3.0", optional = true, default-features = false, features = ["tracing"] }
# A parser and formatter for std::time::{Duration, SystemTime}
humantime = "2.3.0"
# Serde support for humantime
humantime-serde = "1.1.1"
# OpenTelemetry API
opentelemetry = "0.30.0"
# Exporter for OpenTelemetry collector
opentelemetry-otlp = { version = "0.30.0", default-features = false, features = ["grpc-tonic", "trace"] }
# OpenTelemetry Sdout exporter
opentelemetry-stdout = "0.30.0"
# OpenTelemetry observability framework SDK
opentelemetry_sdk = "0.30.0"
# A simple secret keeping library
secrecy = { version = "0.10", features = ["serde"] }
# Serialize and deserialize data structure
serde = { version = "1.0", features = ["derive"], optional = true }
# Provides `derive(Error)``
thiserror = "2.0"
# A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility.
tonic = "0.13"
# A framework for instrumentation
tracing = "0.1"
# Utilities for enriching error handling with tracing diagnostic information.
tracing-error = "0.2"
# OpenTelemetry-compatible distributed tracing systems for processing and visualization.
tracing-opentelemetry = "0.31.0"
# Utilities for implementing and composing tracing subscribers
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
# URL library, based on the WHATWG URL standard
url = { version = "2.5", features = ["serde"] }

[dev-dependencies]
# A rich assertion and matcher library inspired by GoogleTest for C++
googletest = { version = "0.14", features = ["proptest"] }
# A property-based testing and shrinking library
proptest = "1.8.0"
# Enable fixture based testing
rstest = "0.26"




[lints.clippy]
allow_attributes_without_reason = "warn"
missing_const_for_fn = "warn"
missing_docs_in_private_items = "warn"
mod_module_files = "warn"
option_if_let_else = "warn"
panic_in_result_fn = "warn"
too_long_first_doc_paragraph = "warn"
unused_self = "deny"
unwrap_used = "deny"

[lints.rust]
missing_docs = "warn"
non_snake_case = "allow"
trivial_numeric_casts = "warn"
unsafe_code = "forbid"
unused-lifetimes = "warn"
unused-macro-rules = "warn"
unused_import_braces = "warn"
unused_must_use = "deny"

[lints.rustdoc]
broken_intra_doc_links = "warn"
private_doc_tests = "warn"
unescaped_backticks = "warn"
